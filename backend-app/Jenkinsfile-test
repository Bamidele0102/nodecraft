pipeline {
    agent any

    tools {
        nodejs 'NodeJS 16'
    }

    environment {
        MONGO_URI = credentials('MONGO_URI')
        JWT_SECRET = credentials('JWT_SECRET')
        PORT = '3000'
    }

    stages {
        stage('Clone Repository') {
            steps {
                git branch: 'main', url: 'https://github.com/Bamidele0102/nodecraft.git'
            }
        }

        stage('Navigate to Backend Directory') {
            steps {
                dir('backend-app') {
                    echo 'Navigated to backend-app directory'
                }
            }
        }

        stage('Install Dependencies for Testing') {
            steps {
                dir('backend-app') {
                    script {
                        sh 'npm config set registry https://registry.npmjs.org/'
                        sh 'npm config set fetch-timeout 60000'
                        echo 'Starting npm install for testing...'
                        
                        retry(3) {
                            timeout(time: 20, unit: 'MINUTES') {
                                sh 'npm install'
                            }
                        }

                        echo 'Verifying node_modules installation...'
                        sh 'ls -la node_modules || echo "node_modules not found"'
                    }
                }
            }
        }

        stage('Run Unit and Integration Tests') {
            steps {
                dir('backend-app') {
                    withEnv(["PATH+NODE=${env.WORKSPACE}/backend-app/node_modules/.bin"]) {
                        timeout(time: 10, unit: 'MINUTES') {
                            sh 'npx mocha --timeout 20000 "tests/**/*.test.mjs" "tests/**/*.test.js"'
                        }
                    }
                }
            }

            post {
                always {
                    dir('backend-app') {
                        junit 'test-results/*.xml'
                    }
                }
                failure {
                    error "Tests failed. Aborting build."
                }
            }
        }
    }

    post {
        success {
            emailext (
                subject: "SUCCESS: Test Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'",
                body: """
                Good news! The tests passed.
                - Job: ${env.JOB_NAME}
                - Build Number: ${env.BUILD_NUMBER}
                - Build URL: ${env.BUILD_URL}
                """,
                to: "idowu.olayiwola.bamidele@gmail.com,victorgavon@gmail.com"
            )
        }

        failure {
            emailext (
                subject: "FAILURE: Test Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'",
                body: """
                Unfortunately, the tests failed.
                - Job: ${env.JOB_NAME}
                - Build Number: ${env.BUILD_NUMBER}
                - Build URL: ${env.BUILD_URL}
                """,
                to: "idowu.olayiwola.bamidele@gmail.com,victorgavon@gmail.com"
            )
        }
    }
}
